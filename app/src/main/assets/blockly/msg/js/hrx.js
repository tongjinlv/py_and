// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.hrx');

goog.require('Blockly.Msg');

Blockly.Msg["ADD_COMMENT"] = "Kommentar hinzufüche";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'"; // untranslated
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Neie Variable...";
Blockly.Msg["CLEAN_UP"] = "Clean up Blocks"; // untranslated
Blockly.Msg["COLLAPSE_ALL"] = "Blocke zusammerfalte";
Blockly.Msg["COLLAPSE_BLOCK"] = "Block zusammerfalte";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "Farreb 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "mit Farreb 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/"; // untranslated
Blockly.Msg["COLOUR_BLEND_RATIO"] = "im Verhältniss";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "misch";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Vermischt 2 Farwe mit konfigurierbare Farrebverhältniss (0.0 - 1.0).";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://hrx.wikipedia.org/wiki/Farreb";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Wähl en Farreb von der Palett.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com"; // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "zufälliche Farwe";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Wähl en Farreb noh dem Zufallsprinzip.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "blau";
Blockly.Msg["COLOUR_RGB_GREEN"] = "grün";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html"; // untranslated
Blockly.Msg["COLOUR_RGB_RED"] = "rot";
Blockly.Msg["COLOUR_RGB_TITLE"] = "Färreb mit";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Kreiere ene Farreb mit sellrbst definierte rot, grün und blau Wearte. All Wearte müsse zwischich 0 und 100 liehe.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks"; // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "ausbreche aus der Schleif";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "mit der nächste Iteration fortfoohre aus der Schleifa";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Die umgebne Schleif beenne.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Die Oonweisung abbreche und mit der nächste Schleifiteration fortfoohre.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Warnung: Die block sollt nuar in en Schleif verwennet sin.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each"; // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "Für Weart %1 aus der List %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Füahr en Oonweisung für jede Weart in der List aus und setzt dabei die Variable \"%1\" uff den aktuelle List Weart.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with"; // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "Zähl %1 von %2 bis %3 mit %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Zähl die Variable \"%1\" von enem Startweart bis zu enem Zielweart und füahrefür jede Weart en Oonweisung aus.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "En weitre Bedingung hinzufüche.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "En orrer Bedingung hinzufüche, füahrt en Oonweisung aus falls ken Bedingung zutrifft.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse"; // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Hinzufüche, entferne orrer sortiere von Sektione";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "orrer";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "orrer wenn";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "wenn";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Wenn en Bedingung woahr (true) ist, dann füahr en Oonweisung aus.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Wenn en Bedingung woahr (true) ist, dann füahr die earscht Oonweisung aus.  Ansonscht füahr die zwooite Oonweisung aus.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Wenn der erschte Bedingung woahr (true) ist, dann füahr die erschte Oonweisung aus.  Orrer wenn die zwooite Bedingung woahr (true) ist, dann füahr die zwooite Oonweisung aus.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Wenn der erscht Bedingung woahr (true) ist, dann füahr die erschte Oonweisung aus.  Orrer wenn die zwooite Bedingung woahr (true) ist, dann füahr die zwooite Oonweisung aus.  Falls ken der beide Bedingungen woahr (true) ist, dann füahr die dritte Oonweisung aus.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://hrx.wikipedia.org/wiki/For-Schleif";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "mach";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "wiederhol %1 mol";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "En Oonweisung meahrfach ausführe.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat"; // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "Repetiere bis";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "Repetier solang";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Füahr die Oonweisung solang aus wie die Bedingung falsch (false) ist.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Füahr die Oonweisung solang aus wie die Bedingung woahr (true) ist.";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "All %1 Bausten lösche?";
Blockly.Msg["DELETE_BLOCK"] = "Block lösche";
Blockly.Msg["DELETE_VARIABLE"] = "Delete the '%1' variable"; // untranslated
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Delete %1 uses of the '%2' variable?"; // untranslated
Blockly.Msg["DELETE_X_BLOCKS"] = "Block %1 lösche";
Blockly.Msg["DISABLE_BLOCK"] = "Block deaktivieren";
Blockly.Msg["DUPLICATE_BLOCK"] = "Kopieren";
Blockly.Msg["DUPLICATE_COMMENT"] = "Duplicate Comment"; // untranslated
Blockly.Msg["ENABLE_BLOCK"] = "Block aktivieren";
Blockly.Msg["EXPAND_ALL"] = "Blocke expandiere";
Blockly.Msg["EXPAND_BLOCK"] = "Block entfalte";
Blockly.Msg["EXTERNAL_INPUTS"] = "External Inputsexterne Ingänge";
Blockly.Msg["HELP"] = "Hellef";
Blockly.Msg["INLINE_INPUTS"] = "interne Ingänge";
Blockly.Msg["IOS_CANCEL"] = "Cancel"; // untranslated
Blockly.Msg["IOS_ERROR"] = "Error"; // untranslated
Blockly.Msg["IOS_OK"] = "OK"; // untranslated
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Add Input"; // untranslated
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Allow statements"; // untranslated
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "This function has duplicate inputs."; // untranslated
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "INPUTS"; // untranslated
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Add"; // untranslated
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Add Variable"; // untranslated
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Delete"; // untranslated
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "You can't use an empty variable name."; // untranslated
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Rename"; // untranslated
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Variable name"; // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list"; // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "Generier/erzeich en leear List";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Generier/erzeich en leear List ohne Inhalt.";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "List";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Hinzufüche, entferne und sortiere von Elemente.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with"; // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "Erzeich List mit";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "En Element zur List hinzufüche.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Generier/erzeich en List mit konfigurierte Elemente.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "earste";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "#te von hinne";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#"; // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET"] = "Nehm";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "Nehm und entfern";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "letzte";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "zufälliches";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "Entfern";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = ""; // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Extrahiert das earste Element von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Extrahiert das Element zu en definierte Stell von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Extrahiert das letzte Element von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Extrahiert en zufälliches Element von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Extrahiert und entfernt das earste Element von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Extrahiert und entfernt das Element zu en definierte Stell von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Extrahiert und entfernt das letzte Element von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Extrahiert und entfernt en zufälliches Element von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Entfernt das earste Element von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Entfernt das Element zu en definierte Stell von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Entfernt das letzte Element von der List.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Entfernt en zufälliches Element von der List.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "zu # vom End";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "zu #";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "zum Letzte";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist"; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "hol Unnerliste vom Earste";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "hol Unnerliste von # vom End";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "hol Unnerlist von #";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = ""; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Generiert en Kopie von en definierte Tel von en List.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 ist das letzte Element.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 ist das earschte Element.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "Such earstes Voarkommniss";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list"; // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "Such letztes Voarkommniss";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Sucht die Position (index) von en Element in der List Gebt %1 zurück wenn nixs gefunn woard.";
Blockly.Msg["LISTS_INLIST"] = "in der List";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty"; // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 ist leear?";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Ist woahr (true), wenn die List leear ist.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of"; // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "länge %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Die Oonzoohl von Elemente in der List.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with"; // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "Erzich List mit Element %1 wiederhol das %2 mol";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Erzeicht en List mit en variable Oonzoohl von Elemente";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list"; // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "reverse %1"; // untranslated
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set"; // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "uff";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "tue ren setz an";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "setz";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Tut das Element an en Oonfang von en List ren setze.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Tut das Element ren setze an en definierte Stell an en List.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Oonhängt das Element zu en List sei End.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Tut das Element zufällich an en List ren setze.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list.Setzt das earschte Element an en list.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Setzt das Element zu en definierte Stell in en List.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Setzt das letzte Element an en List.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Setzt en zufälliches Element an en List.";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list"; // untranslated
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "ascending"; // untranslated
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "descending"; // untranslated
Blockly.Msg["LISTS_SORT_TITLE"] = "sort %1 %2 %3"; // untranslated
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list."; // untranslated
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case"; // untranslated
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numeric"; // untranslated
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alphabetic"; // untranslated
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists"; // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text"; // untranslated
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list"; // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter."; // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter."; // untranslated
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter"; // untranslated
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "falsch";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values"; // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Ist entweder woahr (true) orrer falsch (false)";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "woahr";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://hrx.wikipedia.org/wiki/Vergleich_%28Zahlen%29";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Ist woahr (true) wenn beide Wearte identisch sind.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Ist woahr (true) wenn der erschte Weart grösser als der zwooite Weart ist.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Ist woahr (true) wenn der erschte Weart grösser als orrer gleich gross wie zwooite Weart ist.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Ist woahr (true) wenn der earschte Weart klener als der zwooite Weart ist.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Ist woahr (true) wenn der earscht Weart klener als orrer gleich gross wie zwooite Weart ist.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Ist woahr (true) wenn beide Wearte unnerschiedlich sind.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not"; // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "net %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Ist woahr (true) wenn der Ingäweweart falsch (false) ist.  Ist falsch (false) wenn der Ingäweweart woahr (true) ist.";
Blockly.Msg["LOGIC_NULL"] = "null";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type"; // untranslated
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Is NULL.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "und";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations"; // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "orrer";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Ist woahr (true) wenn beide Wearte woahr (true) sind.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Ist woahr (true) wenn en von der beide Wearte woahr (true) ist.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "test";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:"; // untranslated
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "wenn falsch";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "wenn woahr";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Üwerprüft en Bedingung \"test\". Wenn die Bedingung woahr ist weerd der \"wenn woahr\" Weart zurückgeb, annerfalls der \"wenn falsch\" Weart";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+"; // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://hrx.wikipedia.org/wiki/Grundrechenoort";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Ist die Summe zwooier Wearte.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Ist der Quotient zwooier Wearte.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Ist die Differenz zwooier Wearte.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Ist das Produkt zwooier Wearte.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Ist der earschte Weart potenziert mit dem zoiten Weart.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2"; // untranslated
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2"; // untranslated
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180."; // untranslated
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://hrx.wikipedia.org/wiki/Inkrement_und_Dekrement";
Blockly.Msg["MATH_CHANGE_TITLE"] = "mach höcher / erhöhe %1 um %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Addiert en Weart zur Variable \"%1\" hinzu.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://hrx.wikipedia.org/wiki/Mathematische_Konstante";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Mathematische Konstante wie: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) oder ∞ (unendlich).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)"; // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "begrenze %1 von %2 bis %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Begrenzt den Weartebereich mittels von / bis Wearte. (inklusiv)";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷"; // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "ist telbar/kann getelt sin doorrich";
Blockly.Msg["MATH_IS_EVEN"] = "ist grood";
Blockly.Msg["MATH_IS_NEGATIVE"] = "ist negativ";
Blockly.Msg["MATH_IS_ODD"] = "ist ungrood";
Blockly.Msg["MATH_IS_POSITIVE"] = "ist positiv";
Blockly.Msg["MATH_IS_PRIME"] = "ist en Primenzoohl";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Üwerprüft ob en Zoohl grood, ungrood, en Primenzoohl, ganzzoohlich, positiv, negativ orrer doorrich en zwooite Zoohl telbar ist.  Gebt woahr (true) orrer falsch (false) zurück.";
Blockly.Msg["MATH_IS_WHOLE"] = "ganze Zoohl";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://hrx.wikipedia.org/wiki/Modulo";
Blockly.Msg["MATH_MODULO_TITLE"] = "Rest von %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Der Rest noh en Division.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×"; // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://hrx.wikipedia.org/wiki/Zoohl";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "En Zoohl.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = ""; // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "Mittelweart en List";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "Maximalweart en List";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "Median von en List";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "Minimalweart von en List";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "Restweart von en List";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "Zufallsweart von en List";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "Standart/Padrong Abweichung von en List";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "Summe von en List";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Ist der Doorrichschnittsweart von aller Wearte in en List.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Ist der grösste Weart in en List.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Ist der Zentralweart von aller Wearte in en List.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Ist der klenste Weart in en List.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Findt den am häifichste voarkommend Weart in en List.  Falls ken Weart öftersch voarkomme als all annre, weard die originale List zurückgeche";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Geb en Zufallsweart aus der List zurück.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Ist die standartiesierte/padronisierte Standartabweichung/Padrongabweichung von aller Wearte in der List";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Ist die Summ aller Wearte in en List.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^"; // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://hex.wikipedia.org/wiki/Zufallszoohle";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "Zufallszoohl (0.0 -1.0)";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Generier/erzeich en Zufallszoohl zwischich 0.0 (inklusiv) und 1.0 (exklusiv).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://hrx.wikipedia.org/wiki/Zufallszahlen";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "ganzoohlicher Zufallswearte zwischich %1 bis %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Generier/erzeich en ganzähliche Zufallsweart zwischich zwooi Wearte (inklusiv).";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://hrx.wikipedia.org/wiki/Runden";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "runde";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "ab runde";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "uff runde";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "En Zoohl uff orrer ab runde.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://hrx.wikipedia.org/wiki/Quadratwoorzel";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "Absolutweart";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "Quadratwoorzel";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Ist der Absolutweart von en Weart.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Ist Weart von der Exponentialfunktion von en Weart.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Ist der natüarliche Logarithmus von en Weart.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Ist der dekoodische Logarithmus von en Weart.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Negiert en Weart.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Rechnet 10 hoch Ingäbweart.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Ist die Qudratwoorzel von en Weart.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-"; // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos"; // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asin"; // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atan"; // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "cos"; // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://hrx.wikipedia.org/wiki/Trigonometrie";
Blockly.Msg["MATH_TRIG_SIN"] = "sin"; // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tan"; // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Ist der Arcuscosinus von en Ingabweart.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Ist der Arcussinus von en Ingäbweart.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Ist der Arcustangens von en Ingäbweart.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Ist der Cosinus von en Winkel.";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Ist der Sinus von en Winkel.";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Ist der Tangens von en Winkel.";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Create colour variable..."; // untranslated
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Create number variable..."; // untranslated
Blockly.Msg["NEW_STRING_VARIABLE"] = "Create string variable..."; // untranslated
Blockly.Msg["NEW_VARIABLE"] = "Neie Variable...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Die neie Variable sei Noome:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:"; // untranslated
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = ""; // untranslated
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements"; // untranslated
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "mit:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://hrx.wikipedia.org/wiki/Prozedur_%28Programmierung%29";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Ruf en Funktionsblock ohne Rückgäweart uff.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://hrx.wikipedia.org/wiki/Prozedur_%28Programmierung%29";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Ruf en Funktionsblock mit Rückgäbweart uff.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "mit:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Generier/erzeich \"Uffruf %1\"";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function..."; // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = ""; // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine"; // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "Funktionsblock";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "zu";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "En Funktionsblock ohne Rückgäbweart.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine"; // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "geb zurück";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "En Funktionsblock mit Rückgäbweart.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warnung: die Funktionsblock hot doppelt Parameter.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Markiear Funktionsblock";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause"; // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Wenn der earste Weart woahr (true) ist, Geb den zwooite Weart zurück.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Warnung: Der Block därref nuar innich en Funktionsblock genutzt sin.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "Markiear Funktionsblock";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Generier/erzeich \"Uffruf %1\"";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "Parameter";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Variable:";
Blockly.Msg["REDO"] = "Redo"; // untranslated
Blockly.Msg["REMOVE_COMMENT"] = "Kommentar entferne";
Blockly.Msg["RENAME_VARIABLE"] = "Die neie Variable sei Noome:";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "All \"%1\" Variable umbenenne in:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification"; // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "An %1 Text oonhänge %2";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Text an die Variable \"%1\" oonhänge.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case"; // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "umwandle in klenbuchstoobe";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "umwandle in Wörter";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "umwandle in GROSSBUCHSTOOBE";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Wandelt Schreibweise von Texte um, in Grossbuchstoobe, Klenbuchstoobe orrer den earste Buchstoob von jedes Wort gross und die annre klen.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "hol earschte Buchstoob";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "hol Buchstoob # von End";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "hol Buchstoob #";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text"; // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "hol letztes Wort";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "hol zufälliches Buchstoob";
Blockly.Msg["TEXT_CHARAT_TAIL"] = ""; // untranslated
Blockly.Msg["TEXT_CHARAT_TITLE"] = "in text %1 %2"; // untranslated
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Extrahiear en Buchstoob von en spezifizierte Position.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings"; // untranslated
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2"; // untranslated
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text."; // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "En Element zum Text hinzufüche.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "verbinne";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Hinzufüche, entfernne und sortiere von Elemente.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "bis #te Buchstoob von hinne";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "bis Buchstoob #te";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "bis letzte Buchstoob";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text"; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in Text";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "earschte Buchstoob";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "hol #te Buchstoob von hinne";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "hol substring Buchstoob #te";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = ""; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Schickt en bestimmstes Tel von dem Text retuar.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text"; // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "Such der Begriff sein earstes Voarkommniss";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "Suche der Begriff sein letztes Vorkommniss.";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "im Text %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Findt das earste / letzte Voarkommniss von en Suchbegriffes in enem Text.  Gebt die Position von dem Begriff orrer %1 zurück.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text"; // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 ist leer?";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Ist woahr (true), wenn der Text leer ist.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation"; // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "Erstell Text aus";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Erstellt en Text doorrich das verbinne von mehre Textelemente.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification"; // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "läng %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Die Oonzoohl von Zeiche in enem Text. (inkl. Leerzeiche)";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text"; // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "Ausgäb %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Geb den Inhalt von en Variable aus.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user"; // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Frocht den Benutzer noh en Zoohl.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Frocht den Benutzer noh enem Text.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "Frächt noh Zoohl mit Hinweis";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "Frocht noh Text mit Hinweis";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings"; // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3"; // untranslated
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text."; // untranslated
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text"; // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "reverse %1"; // untranslated
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text."; // untranslated
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)https://hrx.wikipedia.org/wiki/Zeichenkette";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "En Buchstoob, Text orrer Satz.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces"; // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "entfern Leerzeiche von Oonfang und End Seite";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "entferne Leerzeiche von Oonfang Seite";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "entferne Leerzeiche von End Seite von";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Entfernt Leerzeiche vom Oonfang und / orrer End von en Text.";
Blockly.Msg["TODAY"] = "Today"; // untranslated
Blockly.Msg["UNDO"] = "Undo"; // untranslated
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "Element";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Generier/erzeiche \"Schreibe %1\"";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get"; // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Gebt der Variable sein Weart zurück.";
Blockly.Msg["VARIABLES_SET"] = "Schreib %1 zu %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Generier/erzeich \"Lese %1\"";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set"; // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Setzt en Variable sei Weart.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "A variable named '%1' already exists."; // untranslated
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'."; // untranslated
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something..."; // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "#F09DA2";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["PROCEDURES_HUE"] = "#FFD600";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "#F09DA2";
//need for trans
Blockly.Msg["ORDINALS_1"] = "1st";
Blockly.Msg["ORDINALS_2"] = "2nd";
Blockly.Msg["ORDINALS_3"] = "3rd";
Blockly.Msg["ORDINALS_4"] = "4th";
Blockly.Msg["ORDINALS_5"] = "5th";
Blockly.Msg["ORDINALS_6"] = "6th";
Blockly.Msg["ORDINALS_7"] = "7th";
Blockly.Msg["ORDINALS_8"] = "8th";
Blockly.Msg["ORDINALS_9"] = "9th";
Blockly.Msg["ORDINALS_10"] = "10th";


Blockly.Msg["MOTION_STEP"] = "step";
Blockly.Msg["MOTION_STEPS"] = "steps";
Blockly.Msg["MOTION_FORWARD"] = "Move %1 forward";
Blockly.Msg["MOTION_BACKWARD"] = "Move %1 backward";
Blockly.Msg["MOTION_TURNLEFT"] = "Turn %1 left";
Blockly.Msg["MOTION_TURNRIGHT"] = "Turn %1 right";
Blockly.Msg["MOTION_ACTION"] = "Perform the %1 action";

Blockly.Msg["LEDNEW_BOTEYE"] = "Set %1 eye to %2 and brightness is level %3";
Blockly.Msg["LEDNEW_SENSOR"] = "Set %1 LED to %2 and brightness is level %3";

Blockly.Msg["DIR_LEFT"] = "left";
Blockly.Msg["DIR_RIGHT"] = "right";
Blockly.Msg["DIR_NEXT"] = "next";
Blockly.Msg["DIR_LAST"] = "last";
Blockly.Msg["DIR_ALL"] = "all";

Blockly.Msg["MATA_COLOR_WHITE"] = "white";
Blockly.Msg["MATA_COLOR_RED"] = "red";
Blockly.Msg["MATA_COLOR_YELLOW"] = "yellow";
Blockly.Msg["MATA_COLOR_GREEN"] = "green";
Blockly.Msg["MATA_COLOR_BLUE"] = "blue";
Blockly.Msg["MATA_COLOR_PURPLE"] = "purple";
Blockly.Msg["MATA_COLOR_BLACK"] = "black";


Blockly.Msg["SENSOR_WAIT_EVENT"] = "Wait Event %1";
Blockly.Msg["SENSOR_EVENT_1"] = "yellow";
Blockly.Msg["SENSOR_EVENT_2"] = "red";
Blockly.Msg["SENSOR_EVENT_3"] = "green";
Blockly.Msg["SENSOR_EVENT_4"] = "getting near";
Blockly.Msg["SENSOR_EVENT_5"] = "Play-button pressed";
Blockly.Msg["SENSOR_EVENT_6"] = "bright";
Blockly.Msg["SENSOR_EVENT_7"] = "dark";
Blockly.Msg["SENSOR_EVENT_8"] = "a sound";
Blockly.Msg["SENSOR_EVENT_9"] = "shake";
Blockly.Msg["SENSOR_EVENT_10"] = "getting away";

Blockly.Msg["SENSOR_SEND_DATA"] = "Send message %1";
Blockly.Msg["SENSOR_WAIT_DATA"] = "Wait for message %1";
Blockly.Msg["SENSOR_DATA_1"] = "One";
Blockly.Msg["SENSOR_DATA_2"] = "Two";
Blockly.Msg["SENSOR_DATA_3"] = "Three";
Blockly.Msg["SENSOR_DATA_4"] = "Four";
Blockly.Msg["SENSOR_DATA_5"] = "Five";
Blockly.Msg["SENSOR_DATA_6"] = "Six";

Blockly.Msg["TIMER_WAIT_SEC"] = "Wait for %1";
Blockly.Msg["TIMER_SEC_1"] = "1 sec";
Blockly.Msg["TIMER_SEC_2"] = "2 secs";
Blockly.Msg["TIMER_SEC_3"] = "3 secs";
Blockly.Msg["TIMER_SEC_4"] = "4 secs";
Blockly.Msg["TIMER_SEC_5"] = "5 secs";
Blockly.Msg["TIMER_SEC_6"] = "6 secs";
Blockly.Msg["TIMER_SEC_7"] = "7 secs";
Blockly.Msg["TIMER_SEC_8"] = "8 secs";
Blockly.Msg["TIMER_SEC_9"] = "9 secs";
Blockly.Msg["TIMER_SEC_10"] = "10 secs";

Blockly.Msg["MUSIC_PLAY_SONG"] = "Play the %1 song";
Blockly.Msg["MUSIC_SONG_1"] = "1st";
Blockly.Msg["MUSIC_SONG_2"] = "2nd";
Blockly.Msg["MUSIC_SONG_3"] = "3rd";
Blockly.Msg["MUSIC_SONG_4"] = "4th";
Blockly.Msg["MUSIC_SONG_5"] = "5th";
Blockly.Msg["MUSIC_SONG_6"] = "6th";

Blockly.Msg["MUSIC_DO_DANCE"] = "Perform the %1 dance";
Blockly.Msg["MUSIC_DANCE_1"] = "1st";
Blockly.Msg["MUSIC_DANCE_2"] = "2nd";
Blockly.Msg["MUSIC_DANCE_3"] = "3rd";
Blockly.Msg["MUSIC_DANCE_4"] = "4th";
Blockly.Msg["MUSIC_DANCE_5"] = "5th";
Blockly.Msg["MUSIC_DANCE_6"] = "6th";

Blockly.Msg["MUSIC_PLAY_MELODY"] = "Play the %1 melody";
Blockly.Msg["MUSIC_MELODY_1"] = "1st";
Blockly.Msg["MUSIC_MELODY_2"] = "2nd";
Blockly.Msg["MUSIC_MELODY_3"] = "3rd";
Blockly.Msg["MUSIC_MELODY_4"] = "4th";
Blockly.Msg["MUSIC_MELODY_5"] = "5th";
Blockly.Msg["MUSIC_MELODY_6"] = "6th";
Blockly.Msg["MUSIC_MELODY_7"] = "7th";
Blockly.Msg["MUSIC_MELODY_8"] = "8th";
Blockly.Msg["MUSIC_MELODY_9"] = "9th";
Blockly.Msg["MUSIC_MELODY_10"] = "10th";

Blockly.Msg["MUSIC_PLAY_ALTO"] = "Play alto %1 for %2 beats";
Blockly.Msg["MUSIC_PLAY_TREBLE"] = "Play treble %1 for %2 beats";
Blockly.Msg["MUSIC_TONE_1"] = "Do";
Blockly.Msg["MUSIC_TONE_2"] = "Re";
Blockly.Msg["MUSIC_TONE_3"] = "Mi";
Blockly.Msg["MUSIC_TONE_4"] = "Fa";
Blockly.Msg["MUSIC_TONE_5"] = "So";
Blockly.Msg["MUSIC_TONE_6"] = "La";
Blockly.Msg["MUSIC_TONE_7"] = "Ti";
Blockly.Msg["MUSIC_METER_1"] = "1/4";
Blockly.Msg["MUSIC_METER_2"] = "2/4";
Blockly.Msg["MUSIC_METER_3"] = "3/4";
Blockly.Msg["MUSIC_METER_4"] = "4/4";
Blockly.Msg["MUSIC_METER_5"] = "5/4";
Blockly.Msg["MUSIC_METER_6"] = "6/4";

Blockly.Msg["WHEEL_CONCTRL"] = "%2 Wheel Config %3";
Blockly.Msg["WHEEL_CONCTRL_LEFT"] = "%2 left speed";
Blockly.Msg["WHEEL_CONCTRL_RIGHT"] = "%2 right speed";

Blockly.Msg["WHEEL_NULL"] = "--";
Blockly.Msg["WHEEL_M6"] = "-6";
Blockly.Msg["WHEEL_M5"] = "-5";
Blockly.Msg["WHEEL_M4"] = "-4";
Blockly.Msg["WHEEL_M3"] = "-3";
Blockly.Msg["WHEEL_M2"] = "-2";
Blockly.Msg["WHEEL_M1"] = "-1";
Blockly.Msg["WHEEL_STOP"] = "0";
Blockly.Msg["WHEEL_P1"] = "1";
Blockly.Msg["WHEEL_P2"] = "2";
Blockly.Msg["WHEEL_P3"] = "3";
Blockly.Msg["WHEEL_P4"] = "4";
Blockly.Msg["WHEEL_P5"] = "5";
Blockly.Msg["WHEEL_P6"] = "6";

Blockly.Msg["TOOLBOX_TITLE_MOTION"] = "Move";
Blockly.Msg["TOOLBOX_TITLE_WHEEL"] = "Wheel";
Blockly.Msg["TOOLBOX_TITLE_SENSOR"] = "Sensor";
Blockly.Msg["TOOLBOX_TITLE_EFFECT"] = "Effect";
Blockly.Msg["TOOLBOX_TITLE_LOGIC"] = "Logic";
Blockly.Msg["TOOLBOX_TITLE_MATHS"] = "Maths";
Blockly.Msg["TOOLBOX_TITLE_LOOPS"] = "Loops";
Blockly.Msg["TOOLBOX_TITLE_FUNCTION"] = "Function";
Blockly.Msg["TOOLBOX_TITLE_VARIABLE"] = "Variable";


Blockly.Msg["MATA_COLOR_PINK"] = "pink";

// 2020年06月15日15:20:52 2.3.0版本开始新增的块
Blockly.Msg["TOOLBOX_TITLE_SOUND"] = "Sound";
Blockly.Msg["TOOLBOX_TITLE_CONTROL"] = "Control";
Blockly.Msg["TOOLBOX_TITLE_LED"] = "LED";
Blockly.Msg["TIMER_WAIT_MS"] = "%1 wait %2 ms";
Blockly.Msg["TIMER_WAIT_UNIT"] = "%2 wait %1 unit time";
Blockly.Msg["WHEEL_CONCTRL_CMINPUT"] = "%1 %2 %3 %4 set left wheel speed(cm/s) %5 %6 set right wheel speed(cm/s) %7";
Blockly.Msg["WHEEL_CONCTRL_STOP"] = "%3 %1 %2 stop moving";
Blockly.Msg["WHEEL_CONCTRL_STOP_LW"] = "left wheel";
Blockly.Msg["WHEEL_CONCTRL_STOP_RW"] = "right wheel";
Blockly.Msg["WHEEL_CONCTRL_STOP_ALL"] = "both wheels";
Blockly.Msg["WHEEL_CONCTRL_GEAR"] = "%1 %10 %2 %3 set left wheel %4 speed %5 %6 %7 set right wheel %8 speed %9";
Blockly.Msg["WHEEL_CONCTRL_GEAR_FORWARD"] = "forward";
Blockly.Msg["WHEEL_CONCTRL_GEAR_BACKWARD"] = "backward";
Blockly.Msg["WHEEL_CONCTRL_GEAR_1"] = "gear 1";
Blockly.Msg["WHEEL_CONCTRL_GEAR_2"] = "gear 2";
Blockly.Msg["WHEEL_CONCTRL_GEAR_3"] = "gear 3";
Blockly.Msg["WHEEL_CONCTRL_GEAR_4"] = "gear 4";
Blockly.Msg["WHEEL_CONCTRL_GEAR_5"] = "gear 5";
Blockly.Msg["WHEEL_CONCTRL_GEAR_6"] = "gear 6";
Blockly.Msg["WHEEL_CONCTRL_GEAR_STOP"] = "Stop";
Blockly.Msg["WHEEL_CONCTRL_GEAR_NULL"] = "Null";
Blockly.Msg["MOTION_SPIN_INPUT"] = "%1 %2 rotate %3 degree";
Blockly.Msg["MOTION_LENGTH_INPUT"] = "%1 %2 move %3 %4 cm";
Blockly.Msg["MOTION_LENGTH_INPUT_FORWARD"] = "forward";
Blockly.Msg["MOTION_LENGTH_INPUT_BACKWARD"] = "backward";
Blockly.Msg["SENSOR_ANGEL_PITCH"] = "pitch angle";
Blockly.Msg["SENSOR_ANGEL_YAW"] = "yaw angle";
Blockly.Msg["SENSOR_ANGEL_ROLL"] = "roll angle";
Blockly.Msg["SENSOR_CHECK_BUMPCLEAR"] = "%2 %1 obstacle disappear";
Blockly.Msg["SENSOR_WAITUNTIL"] = "%1 Wait until %2";
Blockly.Msg["SENSOR_CHECK_BRIGHTNESS"] = "%3 %1 detect %2";
Blockly.Msg["SENSOR_CONDITION_BRIGHTNESS"] = "brightness";
Blockly.Msg["SENSOR_CONDITION_DARKNESS"] = "darkness";
Blockly.Msg["SENSOR_GET_SHAKING_VALUE"] = "%2 %1 shaking intensity";
Blockly.Msg["SENSOR_GET_BRIGHTNESS"] = "%2 %1 ambient light intensity";
Blockly.Msg["SENSOR_CHECK_BUMP"] = "%2 %1 meet obstacle";
Blockly.Msg["SENSOR_CHECK_SOUND"] = "%2 %1 hear sound";
Blockly.Msg["SENSOR_CHECK_BTN"] = "%3 %1 %2 button pressed";
Blockly.Msg["SENSOR_CONDITION_BTN_FORWARD"] = "forward";
Blockly.Msg["SENSOR_CONDITION_BTN_BACKWARD"] = "backward";
Blockly.Msg["SENSOR_CONDITION_BTN_TURNLEFT"] = "turn left";
Blockly.Msg["SENSOR_CONDITION_BTN_TURNRIGHT"] = "turn right";
Blockly.Msg["SENSOR_CONDITION_BTN_PLAY"] = "play";
Blockly.Msg["SENSOR_CONDITION_BTN_DELETE"] = "delete";
Blockly.Msg["SENSOR_CONDITION_BTN_MUSIC"] = "music";
Blockly.Msg["SENSOR_CHECK_COLOR"] = "%3 %1 detect color %2";
Blockly.Msg["SENSOR_CHECK_ACCELERATER"] = "%3 %1 gyroscope %2";
Blockly.Msg["SENSOR_CONDITION_ACCE_SHAKE"] = "shaken";
Blockly.Msg["SENSOR_CONDITION_ACCE_TILTED_LEFT"] = "tilted left";
Blockly.Msg["SENSOR_CONDITION_ACCE_TILTED_RIGHT"] = "tilted right";
Blockly.Msg["SENSOR_CONDITION_ACCE_TILTED_FORWARD"] = "tilted down";
Blockly.Msg["SENSOR_CONDITION_ACCE_TILTED_BACKWARD"] = "tilted up";
Blockly.Msg["SENSOR_CONDITION_ACCE_FALL"] = "fall";
Blockly.Msg["SENSOR_CONDITION_ACCE_FACE_UP"] = "face up";
Blockly.Msg["SENSOR_CONDITION_ACCE_FACE_DOWN"] = "face down";
Blockly.Msg["SENSOR_GET_AXIS"] = "%3 %1 %2 axis acceleration";
Blockly.Msg["SENSOR_GET_CHANNEL_COLOR"] = "%3 %1 %2 color value";
Blockly.Msg["SENSOR_CHANNEL_R"] = "red";
Blockly.Msg["SENSOR_CHANNEL_G"] = "green";
Blockly.Msg["SENSOR_CHANNEL_B"] = "blue";
Blockly.Msg["LEDNEW_BOTEYE_INPUT"] = "%5 %1 %2 set %3 eye %4";
Blockly.Msg["LEDNEW_SENSOR_INPUT"] = "%1 set LED %2 to color %3";
Blockly.Msg["LEDNEW_SENSOR_ALL_OFF"] = "%1 turn all LED off";
Blockly.Msg["LEDNEW_BOTEYE_ALL_OFF"] = "%1 turn all eyes off";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION"] = "%1 play animation: %2";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_SPOONDRIFT"] = "spoondrift";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_RAINBOW"] = "rainbow";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_METEOR"] = "meteor";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_FIREFLY"] = "firefly";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_COLORWIPE"] = "colorwipe";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_BREATHE"] = "breathe";
Blockly.Msg["LEDNEW_SENSOR_LEDCYC"] = "%1 set LED ring %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23";
Blockly.Msg["LEDNEW_SENSOR_POSITION"] = "%1 set %2 LED of color %3 and brightness is level %4";
Blockly.Msg["LEDNEW_SENSOR_POSITION_1"] = "the 1st";
Blockly.Msg["LEDNEW_SENSOR_POSITION_2"] = "the 2nd";
Blockly.Msg["LEDNEW_SENSOR_POSITION_3"] = "the 3rd";
Blockly.Msg["LEDNEW_SENSOR_POSITION_4"] = "the 4th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_5"] = "the 5th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_6"] = "the 6th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_7"] = "the 7th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_8"] = "the 8th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_9"] = "the 9th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_10"] = "the 10th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_11"] = "the 11th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_12"] = "the 12th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_ALL"] = "all";
Blockly.Msg["TIMER_MAIN_BLOCK"] = "When %1 Pressed";
Blockly.Msg["SENSOR_RECIVED_DATA"] = "%2 %1 message";
Blockly.Msg["SENSOR_CHECKED_DATA"] = "%3 %2 message %1 recived";