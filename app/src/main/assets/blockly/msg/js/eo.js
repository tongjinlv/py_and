// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.eo');

goog.require('Blockly.Msg');

Blockly.Msg["ADD_COMMENT"] = "Aldoni komenton";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'"; // untranslated
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Ŝangi valoron:";
Blockly.Msg["CLEAN_UP"] = "Purigi blokojn";
Blockly.Msg["COLLAPSE_ALL"] = "Faldi blokojn";
Blockly.Msg["COLLAPSE_BLOCK"] = "Faldi blokon";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "koloro 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "koloro 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/"; // untranslated
Blockly.Msg["COLOUR_BLEND_RATIO"] = "proporcio";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "blend"; // untranslated
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Blends two colours together with a given ratio (0.0 - 1.0)."; // untranslated
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://eo.wikipedia.org/wiki/Koloro";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Elekti koloron el la paletro.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com"; // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "hazarda koloro";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Elekti hazardan koloron.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "blua";
Blockly.Msg["COLOUR_RGB_GREEN"] = "verda";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html"; // untranslated
Blockly.Msg["COLOUR_RGB_RED"] = "ruĝa";
Blockly.Msg["COLOUR_RGB_TITLE"] = "kolorigi per";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100."; // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks"; // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "eliri el la ciklo";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "daŭrigi je la venonta ripeto de la ciklo";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Eliri el la enhava ciklo.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Pretersalti la ceteron de tiu ĉi ciklo kaj daŭrigi je la venonta ripeto.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Averto: tiu ĉi bloko uzeblas nur ene de ciklo.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each"; // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "por ĉiu elemento %1 en la listo %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "For each item in a list, set the variable '%1' to the item, and then do some statements."; // untranslated
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with"; // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "count with %1 from %2 to %3 by %4"; // untranslated
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks."; // untranslated
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Aldoni kondiĉon al la bloko 'se'";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Aldoni 'aliokaze' kondiĉon al la 'se' bloko.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse"; // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this if block."; // untranslated
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "alie";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "alie se";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "se";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Plenumi ordonojn se la valoro estas vero.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Plenumi la unuan blokon de ordonoj se la valoro estas vero, se ne, la duan.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements."; // untranslated
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements."; // untranslated
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop"; // untranslated
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "fari";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "ripeti %1 fojojn";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Plenumi kelkajn ordonojn plurfoje.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat"; // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "ripeti ĝis";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "ripeti dum";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Plenumi ordonojn dum valoro egalas malvero.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Plenumi ordonojn dum la valoro egalas vero.";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Ĉu forigi ĉiujn %1 blokojn?";
Blockly.Msg["DELETE_BLOCK"] = "Forigi blokon";
Blockly.Msg["DELETE_VARIABLE"] = "Forigi la varianton '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Ĉu forigi %1 uzojn de la varianto '%2'?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Forigi %1 blokojn";
Blockly.Msg["DISABLE_BLOCK"] = "Malŝalti blokon";
Blockly.Msg["DUPLICATE_BLOCK"] = "Duobligi";
Blockly.Msg["DUPLICATE_COMMENT"] = "Duplicate Comment"; // untranslated
Blockly.Msg["ENABLE_BLOCK"] = "Ŝalti blokon";
Blockly.Msg["EXPAND_ALL"] = "Malfaldi blokojn";
Blockly.Msg["EXPAND_BLOCK"] = "Malfaldi blokon";
Blockly.Msg["EXTERNAL_INPUTS"] = "Eksteraj eniroj";
Blockly.Msg["HELP"] = "Helpo";
Blockly.Msg["INLINE_INPUTS"] = "Entekstaj eniroj";
Blockly.Msg["IOS_CANCEL"] = "Cancel"; // untranslated
Blockly.Msg["IOS_ERROR"] = "Error"; // untranslated
Blockly.Msg["IOS_OK"] = "OK"; // untranslated
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Add Input"; // untranslated
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Allow statements"; // untranslated
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "This function has duplicate inputs."; // untranslated
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "INPUTS"; // untranslated
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Add"; // untranslated
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Add Variable"; // untranslated
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Delete"; // untranslated
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "You can't use an empty variable name."; // untranslated
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Rename"; // untranslated
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Variable name"; // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list"; // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "krei malplenan liston";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Listo, de longo 0, sen datumaj registroj, estos liverita.";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "listo";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Aldoni, forigi aŭ oridigi sekciojn por reagordi tiun ĉi blokon de listo.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with"; // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "krei liston kun";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Aldoni elementon al la listo.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Krei liston kun ajna nombro de elementoj.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "unuan";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "#el la fino";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#"; // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET"] = "akiri";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "akiri kaj forigi";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "lastan";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "hazardan";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "forigi";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = ""; // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "La unua elemento en la listo esto liverita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "La elemento en la specifita pozicio en la listo estos liverita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "La lasta elemento en la listo estos liverita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Hazarda elemento en la listo estos liverita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "La unua elemento en la listo estos liverita kaj forigita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "La elemento en la specifita pozicio de la listo estos liverita kaj forigita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "La lasta elemento en la listo estos liverita kaj forigita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Hazarda elemento en la listo estos liverita kaj forigita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "La unua elemento en la listo estos forigita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "La elemento en la specifita pozicio en la listo estos forigita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "La lasta elemento en la listo estos forigita.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Hazarda elemento en la listo estos forigita.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "to # from end"; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "to #"; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "to last"; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist"; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "get sub-list from first"; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "get sub-list from # from end"; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "get sub-list from #"; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = ""; // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Creates a copy of the specified portion of a list."; // untranslated
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 estas la lasta elemento.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 estas la unua elemento.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "trovi la unuan aperon de elemento";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list"; // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "trovi la lastan aperon de elemento";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "La indekso de la unua/lasta apero de la elemento en la listo estos liverita. %1 estos liverita se la elemento ne estas trovita.";
Blockly.Msg["LISTS_INLIST"] = "en la listo";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty"; // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 malplenas";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Vero estos liverita, se la listo malplenas.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of"; // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "longo de %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "La longo de listo estos liverita.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with"; // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "krei liston kun elemento %1 ripetita %2 fojojn";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Listo kun la specifita nombro de elementoj, kiuj havos la donitan valoron, estos kreita.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list"; // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "reverse %1"; // untranslated
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set"; // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "kiel";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "enmeti je";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "difini";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Inserts the item at the start of a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Inserts the item at the specified position in a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Append the item to the end of a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Inserts the item randomly in a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Sets the first item in a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Sets the item at the specified position in a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Sets the last item in a list."; // untranslated
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Sets a random item in a list."; // untranslated
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list"; // untranslated
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "ascending"; // untranslated
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "descending"; // untranslated
Blockly.Msg["LISTS_SORT_TITLE"] = "sort %1 %2 %3"; // untranslated
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Sort a copy of a list."; // untranslated
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alphabetic, ignore case"; // untranslated
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numeric"; // untranslated
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alphabetic"; // untranslated
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists"; // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "make list from text"; // untranslated
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "make text from list"; // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Join a list of texts into one text, separated by a delimiter."; // untranslated
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Split text into a list of texts, breaking at each delimiter."; // untranslated
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "with delimiter"; // untranslated
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "falsa";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values"; // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "La rezulto egalas ĉu vero, ĉu malvero.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "vera";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://eo.wikipedia.org/wiki/Neegala%C4%B5o_(pli_granda,_malpli_granda)";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Vero estos liverita, se la du eniroj egalas.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Vero estos liverita, se la unua eniro estas pli granda ol la dua.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Vero estos liverita, se la unua eniro estas pli granda aŭ egala al la dua.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Vero estos liverita, se la unua eniro estas pli eta ol la dua.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Vero estos liverita, se la unua eniro estas pli eta aŭ egala al la dua.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Vero estos liverita, se la du eniroj ne egalas.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not"; // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "maligi %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Se la eniro egalas vero, la rezulto egalas malvero. Se la eniro egalas malvero, la rezulto egalas vero.";
Blockly.Msg["LOGIC_NULL"] = "null"; // untranslated
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type"; // untranslated
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Returns null."; // untranslated
Blockly.Msg["LOGIC_OPERATION_AND"] = "kaj";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations"; // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "aŭ";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Vero estos liverita, se la du eniroj egalas veron.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Vero estos liverita, se almenaŭ unu el la eniroj egalas veron.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "testi";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:"; // untranslated
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "se estas malvero";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "se estas vero";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Kontroli la kondiĉon en 'testo'. Se la kondiĉo egalas veron, liveri la valoron 'se estas vero', aliokaze liveri la valoron 'se estas malvero'.";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+"; // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://eo.wikipedia.org/wiki/Aritmetiko";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "La sumo de la du nombroj estos liverita.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "La kvociento de la du nombroj estos liverita.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "La diferenco inter la du nombroj estos liverita.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "La produto de la du numeroj estos liverita.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Return the first number raised to the power of the second number."; // untranslated
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2"; // untranslated
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2"; // untranslated
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180."; // untranslated
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter"; // untranslated
Blockly.Msg["MATH_CHANGE_TITLE"] = "change %1 by %2"; // untranslated
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Aldoni nombro al varianto '%1'.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://eo.wikipedia.org/wiki/Matematika_konstanto";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity)."; // untranslated
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)"; // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "limigi %1 inter %2 kaj %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "La nombro estos limigita tiel ke ĝi egalas la limojn aŭ troviĝas inter ili.";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷"; // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "estas dividebla de";
Blockly.Msg["MATH_IS_EVEN"] = "estas para";
Blockly.Msg["MATH_IS_NEGATIVE"] = "estas negativa";
Blockly.Msg["MATH_IS_ODD"] = "estas nepara";
Blockly.Msg["MATH_IS_POSITIVE"] = "estas pozitiva";
Blockly.Msg["MATH_IS_PRIME"] = "estas primo";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Vero aŭ malvero estos liverita, depende de la rezulto de kontrolo, ĉu nombro estas para, nepara, pozitiva, negativa, aŭ dividebla de iu nombro.";
Blockly.Msg["MATH_IS_WHOLE"] = "estas entjero";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://eo.wikipedia.org/wiki/Resto";
Blockly.Msg["MATH_MODULO_TITLE"] = "resto de %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "La resto de la divido de du nombroj estos liverita.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×"; // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://eo.wikipedia.org/wiki/Nombro";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Nombro.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = ""; // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "listmezumo";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "listmaksimumo";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "median of list"; // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "listminimumo";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "reĝimoj de listo";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "hazarda elemento el la listo";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "Norma devio de la listo";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "sumo de listo";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "La aritmetika meznombro de la numeroj en la listo estos liverita.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "La plej granda numero en la listo estos redonita.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Return the median number in the list."; // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "La plej eta nombro en la listo estos redonita.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Return a list of the most common item(s) in the list."; // untranslated
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Elemento el la listo estos hazarde liverita.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "La norma devio de la listo estos liverita.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "La sumo de ĉiuj nombro en la listo estos liverita.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^"; // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation"; // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "random fraction"; // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive)."; // untranslated
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "hazarda entjero inter %1 kaj %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Nombro estos hazarde liverita, tiel ke ĝi egalas la limojn aŭ troviĝas inter ili.";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "rondigi";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "rondigi malsupren";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "Rondigi supren";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Rondigi nombroj, supren aŭ malsupren.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://eo.wikipedia.org/wiki/Kvadrata_radiko";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "absoluta";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "kvadrata radiko";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "La absoluta valoro de nombro estos liverita.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "La rezulto de la potenco de e je la nombro.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "La natura logaritmo de nombro estos liverita.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "La dekbaza logaritmo de numero estos liverita.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "La negativigo de numero estos liverita.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Return 10 to the power of a number."; // untranslated
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "La kvadrata radiko de nombro estos liverita.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-"; // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos"; // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asin"; // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atan"; // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "cos"; // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://eo.wikipedia.org/wiki/Trigonometria_funkcio";
Blockly.Msg["MATH_TRIG_SIN"] = "sin"; // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tan"; // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Return the arccosine of a number."; // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "La sinusarko de nombro estos liverita.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "La targentarko de nombro estos liverita.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Return the cosine of a degree (not radian)."; // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Return the sine of a degree (not radian)."; // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Return the tangent of a degree (not radian)."; // untranslated
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Create colour variable..."; // untranslated
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Create number variable..."; // untranslated
Blockly.Msg["NEW_STRING_VARIABLE"] = "Create string variable..."; // untranslated
Blockly.Msg["NEW_VARIABLE"] = "Nova varianto...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Nova nomo de varianto:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:"; // untranslated
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = ""; // untranslated
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "allow statements"; // untranslated
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "with:"; // untranslated
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine"; // untranslated
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Run the user-defined function '%1'."; // untranslated
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine"; // untranslated
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Run the user-defined function '%1' and use its output."; // untranslated
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "with:"; // untranslated
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Krei '%1'";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe this function..."; // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = ""; // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine"; // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "blocks 1"; // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "to"; // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Creates a function with no output."; // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine"; // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "return"; // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Creates a function with an output."; // untranslated
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Warning: This function has duplicate parameters."; // untranslated
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Highlight function definition"; // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause"; // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "If a value is true, then return a second value."; // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Warning: This block may be used only within a function definition."; // untranslated
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "input name:"; // untranslated
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Add an input to the function."; // untranslated
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "inputs"; // untranslated
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Add, remove, or reorder inputs to this function."; // untranslated
Blockly.Msg["REDO"] = "Refari";
Blockly.Msg["REMOVE_COMMENT"] = "Forigi komenton";
Blockly.Msg["RENAME_VARIABLE"] = "Renomi varianton...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Renomi ĉiujn '%1' variantojn kiel:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification"; // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "to %1 append text %2"; // untranslated
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Append some text to variable '%1'."; // untranslated
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case"; // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "to lower case"; // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "to Title Case"; // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "to UPPER CASE"; // untranslated
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Return a copy of the text in a different case."; // untranslated
Blockly.Msg["TEXT_CHARAT_FIRST"] = "get first letter"; // untranslated
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "get letter # from end"; // untranslated
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "get letter #"; // untranslated
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text"; // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "get last letter"; // untranslated
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "get random letter"; // untranslated
Blockly.Msg["TEXT_CHARAT_TAIL"] = ""; // untranslated
Blockly.Msg["TEXT_CHARAT_TITLE"] = "in text %1 %2"; // untranslated
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Returns the letter at the specified position."; // untranslated
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings"; // untranslated
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2"; // untranslated
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text."; // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Add an item to the text."; // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "join"; // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Add, remove, or reorder sections to reconfigure this text block."; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "to letter # from end"; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "to letter #"; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "to last letter"; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text"; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "en la teksto";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "get substring from first letter"; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "get substring from letter # from end"; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "get substring from letter #"; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = ""; // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Returns a specified portion of the text."; // untranslated
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text"; // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "find first occurrence of text"; // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "find last occurrence of text"; // untranslated
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "en la teksto %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found."; // untranslated
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text"; // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 malplenas";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Returns true if the provided text is empty."; // untranslated
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation"; // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "create text with"; // untranslated
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Create a piece of text by joining together any number of items."; // untranslated
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification"; // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "longo de %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Returns the number of letters (including spaces) in the provided text."; // untranslated
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text"; // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "presi %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Presi la specifitan tekston, nombron aŭ alian valoron.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user"; // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Peti nombron al uzanto.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Peti tekston al uzanto.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "prompt for number with message"; // untranslated
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "prompt for text with message"; // untranslated
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings"; // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3"; // untranslated
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text."; // untranslated
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text"; // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "reverse %1"; // untranslated
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text."; // untranslated
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)"; // untranslated
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "A letter, word, or line of text."; // untranslated
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces"; // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "trim spaces from both sides of"; // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "trim spaces from left side of"; // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "forigi spacojn el la dekstra flanko de";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Return a copy of the text with spaces removed from one or both ends."; // untranslated
Blockly.Msg["TODAY"] = "Hodiaŭ";
Blockly.Msg["UNDO"] = "Malfari";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "elemento";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Create 'set %1'"; // untranslated
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get"; // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Returns the value of this variable."; // untranslated
Blockly.Msg["VARIABLES_SET"] = "set %1 to %2"; // untranslated
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Create 'get %1'"; // untranslated
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set"; // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Sets this variable to be equal to the input."; // untranslated
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Jam ekzistas varianto kun la nomo '%1'.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'."; // untranslated
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Diru ion…";
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "#F09DA2";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["PROCEDURES_HUE"] = "#FFD600";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "#F09DA2";
//need for trans
Blockly.Msg["ORDINALS_1"] = "1st";
Blockly.Msg["ORDINALS_2"] = "2nd";
Blockly.Msg["ORDINALS_3"] = "3rd";
Blockly.Msg["ORDINALS_4"] = "4th";
Blockly.Msg["ORDINALS_5"] = "5th";
Blockly.Msg["ORDINALS_6"] = "6th";
Blockly.Msg["ORDINALS_7"] = "7th";
Blockly.Msg["ORDINALS_8"] = "8th";
Blockly.Msg["ORDINALS_9"] = "9th";
Blockly.Msg["ORDINALS_10"] = "10th";


Blockly.Msg["MOTION_STEP"] = "step";
Blockly.Msg["MOTION_STEPS"] = "steps";
Blockly.Msg["MOTION_FORWARD"] = "Move %1 forward";
Blockly.Msg["MOTION_BACKWARD"] = "Move %1 backward";
Blockly.Msg["MOTION_TURNLEFT"] = "Turn %1 left";
Blockly.Msg["MOTION_TURNRIGHT"] = "Turn %1 right";
Blockly.Msg["MOTION_ACTION"] = "Perform the %1 action";

Blockly.Msg["LEDNEW_BOTEYE"] = "Set %1 eye to %2 and brightness is level %3";
Blockly.Msg["LEDNEW_SENSOR"] = "Set %1 LED to %2 and brightness is level %3";

Blockly.Msg["DIR_LEFT"] = "left";
Blockly.Msg["DIR_RIGHT"] = "right";
Blockly.Msg["DIR_NEXT"] = "next";
Blockly.Msg["DIR_LAST"] = "last";
Blockly.Msg["DIR_ALL"] = "all";

Blockly.Msg["MATA_COLOR_WHITE"] = "white";
Blockly.Msg["MATA_COLOR_RED"] = "red";
Blockly.Msg["MATA_COLOR_YELLOW"] = "yellow";
Blockly.Msg["MATA_COLOR_GREEN"] = "green";
Blockly.Msg["MATA_COLOR_BLUE"] = "blue";
Blockly.Msg["MATA_COLOR_PURPLE"] = "purple";
Blockly.Msg["MATA_COLOR_BLACK"] = "black";


Blockly.Msg["SENSOR_WAIT_EVENT"] = "Wait Event %1";
Blockly.Msg["SENSOR_EVENT_1"] = "yellow";
Blockly.Msg["SENSOR_EVENT_2"] = "red";
Blockly.Msg["SENSOR_EVENT_3"] = "green";
Blockly.Msg["SENSOR_EVENT_4"] = "getting near";
Blockly.Msg["SENSOR_EVENT_5"] = "Play-button pressed";
Blockly.Msg["SENSOR_EVENT_6"] = "bright";
Blockly.Msg["SENSOR_EVENT_7"] = "dark";
Blockly.Msg["SENSOR_EVENT_8"] = "a sound";
Blockly.Msg["SENSOR_EVENT_9"] = "shake";
Blockly.Msg["SENSOR_EVENT_10"] = "getting away";

Blockly.Msg["SENSOR_SEND_DATA"] = "Send message %1";
Blockly.Msg["SENSOR_WAIT_DATA"] = "Wait for message %1";
Blockly.Msg["SENSOR_DATA_1"] = "One";
Blockly.Msg["SENSOR_DATA_2"] = "Two";
Blockly.Msg["SENSOR_DATA_3"] = "Three";
Blockly.Msg["SENSOR_DATA_4"] = "Four";
Blockly.Msg["SENSOR_DATA_5"] = "Five";
Blockly.Msg["SENSOR_DATA_6"] = "Six";

Blockly.Msg["TIMER_WAIT_SEC"] = "Wait for %1";
Blockly.Msg["TIMER_SEC_1"] = "1 sec";
Blockly.Msg["TIMER_SEC_2"] = "2 secs";
Blockly.Msg["TIMER_SEC_3"] = "3 secs";
Blockly.Msg["TIMER_SEC_4"] = "4 secs";
Blockly.Msg["TIMER_SEC_5"] = "5 secs";
Blockly.Msg["TIMER_SEC_6"] = "6 secs";
Blockly.Msg["TIMER_SEC_7"] = "7 secs";
Blockly.Msg["TIMER_SEC_8"] = "8 secs";
Blockly.Msg["TIMER_SEC_9"] = "9 secs";
Blockly.Msg["TIMER_SEC_10"] = "10 secs";

Blockly.Msg["MUSIC_PLAY_SONG"] = "Play the %1 song";
Blockly.Msg["MUSIC_SONG_1"] = "1st";
Blockly.Msg["MUSIC_SONG_2"] = "2nd";
Blockly.Msg["MUSIC_SONG_3"] = "3rd";
Blockly.Msg["MUSIC_SONG_4"] = "4th";
Blockly.Msg["MUSIC_SONG_5"] = "5th";
Blockly.Msg["MUSIC_SONG_6"] = "6th";

Blockly.Msg["MUSIC_DO_DANCE"] = "Perform the %1 dance";
Blockly.Msg["MUSIC_DANCE_1"] = "1st";
Blockly.Msg["MUSIC_DANCE_2"] = "2nd";
Blockly.Msg["MUSIC_DANCE_3"] = "3rd";
Blockly.Msg["MUSIC_DANCE_4"] = "4th";
Blockly.Msg["MUSIC_DANCE_5"] = "5th";
Blockly.Msg["MUSIC_DANCE_6"] = "6th";

Blockly.Msg["MUSIC_PLAY_MELODY"] = "Play the %1 melody";
Blockly.Msg["MUSIC_MELODY_1"] = "1st";
Blockly.Msg["MUSIC_MELODY_2"] = "2nd";
Blockly.Msg["MUSIC_MELODY_3"] = "3rd";
Blockly.Msg["MUSIC_MELODY_4"] = "4th";
Blockly.Msg["MUSIC_MELODY_5"] = "5th";
Blockly.Msg["MUSIC_MELODY_6"] = "6th";
Blockly.Msg["MUSIC_MELODY_7"] = "7th";
Blockly.Msg["MUSIC_MELODY_8"] = "8th";
Blockly.Msg["MUSIC_MELODY_9"] = "9th";
Blockly.Msg["MUSIC_MELODY_10"] = "10th";

Blockly.Msg["MUSIC_PLAY_ALTO"] = "Play alto %1 for %2 beats";
Blockly.Msg["MUSIC_PLAY_TREBLE"] = "Play treble %1 for %2 beats";
Blockly.Msg["MUSIC_TONE_1"] = "Do";
Blockly.Msg["MUSIC_TONE_2"] = "Re";
Blockly.Msg["MUSIC_TONE_3"] = "Mi";
Blockly.Msg["MUSIC_TONE_4"] = "Fa";
Blockly.Msg["MUSIC_TONE_5"] = "So";
Blockly.Msg["MUSIC_TONE_6"] = "La";
Blockly.Msg["MUSIC_TONE_7"] = "Ti";
Blockly.Msg["MUSIC_METER_1"] = "1/4";
Blockly.Msg["MUSIC_METER_2"] = "2/4";
Blockly.Msg["MUSIC_METER_3"] = "3/4";
Blockly.Msg["MUSIC_METER_4"] = "4/4";
Blockly.Msg["MUSIC_METER_5"] = "5/4";
Blockly.Msg["MUSIC_METER_6"] = "6/4";

Blockly.Msg["WHEEL_CONCTRL"] = "%2 Wheel Config %3";
Blockly.Msg["WHEEL_CONCTRL_LEFT"] = "%2 left speed";
Blockly.Msg["WHEEL_CONCTRL_RIGHT"] = "%2 right speed";

Blockly.Msg["WHEEL_NULL"] = "--";
Blockly.Msg["WHEEL_M6"] = "-6";
Blockly.Msg["WHEEL_M5"] = "-5";
Blockly.Msg["WHEEL_M4"] = "-4";
Blockly.Msg["WHEEL_M3"] = "-3";
Blockly.Msg["WHEEL_M2"] = "-2";
Blockly.Msg["WHEEL_M1"] = "-1";
Blockly.Msg["WHEEL_STOP"] = "0";
Blockly.Msg["WHEEL_P1"] = "1";
Blockly.Msg["WHEEL_P2"] = "2";
Blockly.Msg["WHEEL_P3"] = "3";
Blockly.Msg["WHEEL_P4"] = "4";
Blockly.Msg["WHEEL_P5"] = "5";
Blockly.Msg["WHEEL_P6"] = "6";

Blockly.Msg["TOOLBOX_TITLE_MOTION"] = "Move";
Blockly.Msg["TOOLBOX_TITLE_WHEEL"] = "Wheel";
Blockly.Msg["TOOLBOX_TITLE_SENSOR"] = "Sensor";
Blockly.Msg["TOOLBOX_TITLE_EFFECT"] = "Effect";
Blockly.Msg["TOOLBOX_TITLE_LOGIC"] = "Logic";
Blockly.Msg["TOOLBOX_TITLE_MATHS"] = "Maths";
Blockly.Msg["TOOLBOX_TITLE_LOOPS"] = "Loops";
Blockly.Msg["TOOLBOX_TITLE_FUNCTION"] = "Function";
Blockly.Msg["TOOLBOX_TITLE_VARIABLE"] = "Variable";


Blockly.Msg["MATA_COLOR_PINK"] = "pink";

// 2020年06月15日15:20:52 2.3.0版本开始新增的块
Blockly.Msg["TOOLBOX_TITLE_SOUND"] = "Sound";
Blockly.Msg["TOOLBOX_TITLE_CONTROL"] = "Control";
Blockly.Msg["TOOLBOX_TITLE_LED"] = "LED";
Blockly.Msg["TIMER_WAIT_MS"] = "%1 wait %2 ms";
Blockly.Msg["TIMER_WAIT_UNIT"] = "%2 wait %1 unit time";
Blockly.Msg["WHEEL_CONCTRL_CMINPUT"] = "%1 %2 %3 %4 set left wheel speed(cm/s) %5 %6 set right wheel speed(cm/s) %7";
Blockly.Msg["WHEEL_CONCTRL_STOP"] = "%3 %1 %2 stop moving";
Blockly.Msg["WHEEL_CONCTRL_STOP_LW"] = "left wheel";
Blockly.Msg["WHEEL_CONCTRL_STOP_RW"] = "right wheel";
Blockly.Msg["WHEEL_CONCTRL_STOP_ALL"] = "both wheels";
Blockly.Msg["WHEEL_CONCTRL_GEAR"] = "%1 %10 %2 %3 set left wheel %4 speed %5 %6 %7 set right wheel %8 speed %9";
Blockly.Msg["WHEEL_CONCTRL_GEAR_FORWARD"] = "forward";
Blockly.Msg["WHEEL_CONCTRL_GEAR_BACKWARD"] = "backward";
Blockly.Msg["WHEEL_CONCTRL_GEAR_1"] = "gear 1";
Blockly.Msg["WHEEL_CONCTRL_GEAR_2"] = "gear 2";
Blockly.Msg["WHEEL_CONCTRL_GEAR_3"] = "gear 3";
Blockly.Msg["WHEEL_CONCTRL_GEAR_4"] = "gear 4";
Blockly.Msg["WHEEL_CONCTRL_GEAR_5"] = "gear 5";
Blockly.Msg["WHEEL_CONCTRL_GEAR_6"] = "gear 6";
Blockly.Msg["WHEEL_CONCTRL_GEAR_STOP"] = "Stop";
Blockly.Msg["WHEEL_CONCTRL_GEAR_NULL"] = "Null";
Blockly.Msg["MOTION_SPIN_INPUT"] = "%1 %2 rotate %3 degree";
Blockly.Msg["MOTION_LENGTH_INPUT"] = "%1 %2 move %3 %4 cm";
Blockly.Msg["MOTION_LENGTH_INPUT_FORWARD"] = "forward";
Blockly.Msg["MOTION_LENGTH_INPUT_BACKWARD"] = "backward";
Blockly.Msg["SENSOR_ANGEL_PITCH"] = "pitch angle";
Blockly.Msg["SENSOR_ANGEL_YAW"] = "yaw angle";
Blockly.Msg["SENSOR_ANGEL_ROLL"] = "roll angle";
Blockly.Msg["SENSOR_CHECK_BUMPCLEAR"] = "%2 %1 obstacle disappear";
Blockly.Msg["SENSOR_WAITUNTIL"] = "%1 Wait until %2";
Blockly.Msg["SENSOR_CHECK_BRIGHTNESS"] = "%3 %1 detect %2";
Blockly.Msg["SENSOR_CONDITION_BRIGHTNESS"] = "brightness";
Blockly.Msg["SENSOR_CONDITION_DARKNESS"] = "darkness";
Blockly.Msg["SENSOR_GET_SHAKING_VALUE"] = "%2 %1 shaking intensity";
Blockly.Msg["SENSOR_GET_BRIGHTNESS"] = "%2 %1 ambient light intensity";
Blockly.Msg["SENSOR_CHECK_BUMP"] = "%2 %1 meet obstacle";
Blockly.Msg["SENSOR_CHECK_SOUND"] = "%2 %1 hear sound";
Blockly.Msg["SENSOR_CHECK_BTN"] = "%3 %1 %2 button pressed";
Blockly.Msg["SENSOR_CONDITION_BTN_FORWARD"] = "forward";
Blockly.Msg["SENSOR_CONDITION_BTN_BACKWARD"] = "backward";
Blockly.Msg["SENSOR_CONDITION_BTN_TURNLEFT"] = "turn left";
Blockly.Msg["SENSOR_CONDITION_BTN_TURNRIGHT"] = "turn right";
Blockly.Msg["SENSOR_CONDITION_BTN_PLAY"] = "play";
Blockly.Msg["SENSOR_CONDITION_BTN_DELETE"] = "delete";
Blockly.Msg["SENSOR_CONDITION_BTN_MUSIC"] = "music";
Blockly.Msg["SENSOR_CHECK_COLOR"] = "%3 %1 detect color %2";
Blockly.Msg["SENSOR_CHECK_ACCELERATER"] = "%3 %1 gyroscope %2";
Blockly.Msg["SENSOR_CONDITION_ACCE_SHAKE"] = "shaken";
Blockly.Msg["SENSOR_CONDITION_ACCE_TILTED_LEFT"] = "tilted left";
Blockly.Msg["SENSOR_CONDITION_ACCE_TILTED_RIGHT"] = "tilted right";
Blockly.Msg["SENSOR_CONDITION_ACCE_TILTED_FORWARD"] = "tilted down";
Blockly.Msg["SENSOR_CONDITION_ACCE_TILTED_BACKWARD"] = "tilted up";
Blockly.Msg["SENSOR_CONDITION_ACCE_FALL"] = "fall";
Blockly.Msg["SENSOR_CONDITION_ACCE_FACE_UP"] = "face up";
Blockly.Msg["SENSOR_CONDITION_ACCE_FACE_DOWN"] = "face down";
Blockly.Msg["SENSOR_GET_AXIS"] = "%3 %1 %2 axis acceleration";
Blockly.Msg["SENSOR_GET_CHANNEL_COLOR"] = "%3 %1 %2 color value";
Blockly.Msg["SENSOR_CHANNEL_R"] = "red";
Blockly.Msg["SENSOR_CHANNEL_G"] = "green";
Blockly.Msg["SENSOR_CHANNEL_B"] = "blue";
Blockly.Msg["LEDNEW_BOTEYE_INPUT"] = "%5 %1 %2 set %3 eye %4";
Blockly.Msg["LEDNEW_SENSOR_INPUT"] = "%1 set LED %2 to color %3";
Blockly.Msg["LEDNEW_SENSOR_ALL_OFF"] = "%1 turn all LED off";
Blockly.Msg["LEDNEW_BOTEYE_ALL_OFF"] = "%1 turn all eyes off";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION"] = "%1 play animation: %2";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_SPOONDRIFT"] = "spoondrift";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_RAINBOW"] = "rainbow";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_METEOR"] = "meteor";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_FIREFLY"] = "firefly";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_COLORWIPE"] = "colorwipe";
Blockly.Msg["LEDNEW_SENSOR_ANIMATION_BREATHE"] = "breathe";
Blockly.Msg["LEDNEW_SENSOR_LEDCYC"] = "%1 set LED ring %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23";
Blockly.Msg["LEDNEW_SENSOR_POSITION"] = "%1 set %2 LED of color %3 and brightness is level %4";
Blockly.Msg["LEDNEW_SENSOR_POSITION_1"] = "the 1st";
Blockly.Msg["LEDNEW_SENSOR_POSITION_2"] = "the 2nd";
Blockly.Msg["LEDNEW_SENSOR_POSITION_3"] = "the 3rd";
Blockly.Msg["LEDNEW_SENSOR_POSITION_4"] = "the 4th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_5"] = "the 5th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_6"] = "the 6th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_7"] = "the 7th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_8"] = "the 8th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_9"] = "the 9th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_10"] = "the 10th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_11"] = "the 11th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_12"] = "the 12th";
Blockly.Msg["LEDNEW_SENSOR_POSITION_ALL"] = "all";
Blockly.Msg["TIMER_MAIN_BLOCK"] = "When %1 Pressed";
Blockly.Msg["SENSOR_RECIVED_DATA"] = "%2 %1 message";
Blockly.Msg["SENSOR_CHECKED_DATA"] = "%3 %2 message %1 recived";